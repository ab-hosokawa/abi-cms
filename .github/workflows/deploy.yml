name: Deploy to Server

on:
    push:
        branches: [ "main"]

jobs:
    deploy:
        runs-on: ubuntu-latest
    
        steps:
        - name: Checkout Code
          uses: actions/checkout@v3
    
        - name: Set up SSH
          uses: webfactory/ssh-agent@v0.5.3
          with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

        - name: Add known hosts
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts

        - name: Deploy to Server
          run: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'

            sudo su -
                
            cd /root/abi-cms/
            git pull
            
            docker exec cms_frontend npm install || exit 1
            
            # websiteコンテナを完全に再ビルド
            # docker-compose build --no-cache website
            # docker-compose up -d website
            
            # sleep 10
  
            # コンテナを再起動
             docker restart website
             
            # コンテナが完全に起動するまで待機
            sleep 10
            
            docker ps | grep website
            
            docker exec website node -v
            
            docker exec website npm -v
            
            # docker exec website npm cache clean --force
            # sleep 10
            # docker exec website rm -rf node_modules
            # sleep 5
            # docker exec website rm -f package-lock.json
            # sleep 2
            # docker exec website npm install
            # sleep 10
            
            # Next.jsアプリケーションを再ビルド
            # docker exec website npm run build
            sleep 10
            # docker exec website npm run start
            
            docker logs website
            
            # docker exec website cat /var/log/nginx/error.log
            # docker exec website cat /var/log/next.log
            # docker exec website sh -c "lsof -i:3000"
            
            docker exec reverse-proxy cat /var/log/nginx/error.log
            docker exec reverse-proxy ping website
            docker-compose restart reverse-proxy
            
            cd ./backend/src/
          
            docker exec -it cms_backend bash

            php artisan migrate --force
            
            exit
            
            EOF
