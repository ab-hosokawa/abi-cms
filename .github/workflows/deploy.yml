name: Deploy to Server

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'

          sudo su -

          cd /root/abi-cms/
          git pull

          podman exec cms_frontend npm install || exit 1

          cd ./backend/src/

          podman exec cms_backend php artisan migrate --force

          # コンテナの状態確認
          echo "Checking container status..."
          podman ps -a | grep website

          # 既存のコンテナを停止・削除
          echo "Cleaning up existing container..."
          podman stop website || true
          podman rm website || true

          # コンテナの再作成
          echo "Creating new container with adjusted memory limits..."
          podman run -d \
            --name website \
            --memory="4g" \
            --memory-swap="6g" \
            localhost/abi-cms_website:latest

          # コンテナの状態確認
          echo "Verifying container status..."
          podman ps -a | grep website

          # コンテナログの確認
          echo "Checking container logs..."
          podman logs website

          # コンテナの起動を待機
          echo "Waiting for container to be ready..."
          CONTAINER_READY=false
          for i in {1..30}; do
            if podman ps --format "{{.Names}}" | grep -q "^website$"; then
              CONTAINER_STATUS=$(podman inspect website --format '{{.State.Status}}')
              if [ "$CONTAINER_STATUS" = "running" ]; then
                echo "Container is running successfully"
                CONTAINER_READY=true
                break
              fi
            fi
            echo "Waiting... ($i/30) - Current status: $CONTAINER_STATUS"
            sleep 2
          done

          if [ "$CONTAINER_READY" = false ]; then
            echo "Container failed to start properly. Checking logs:"
            podman logs website
            exit 1
          fi

          # コンテナが実際に応答できることを確認
          echo "Verifying container responsiveness..."
          if ! podman exec website bash -c 'ps aux | grep node' > /dev/null 2>&1; then
            echo "Container is not responding to exec commands"
            podman logs website
            exit 1
          fi

          echo "Starting build process..."

          # 段階的なビルドプロセスの実行
          echo "Installing dependencies..."
          if ! podman exec website bash -c 'cd /app && NODE_OPTIONS="--max_old_space_size=3072" npm install'; then
            echo "Failed to install dependencies. Checking logs:"
            podman logs website
            exit 1
          fi

          echo "Building application..."
          if ! podman exec website bash -c 'cd /app && NODE_OPTIONS="--max_old_space_size=3072" npm run build'; then
            echo "Failed to build application. Checking logs:"
            podman logs website
            exit 1
          fi

          echo "Restarting PM2..."
          if ! podman exec website bash -c 'cd /app && pm2 restart all'; then
            echo "Failed to restart PM2. Checking logs:"
            podman logs website
            exit 1
          fi

          echo "Deployment completed successfully"

          exit

          EOF
